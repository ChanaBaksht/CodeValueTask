version: '3.8'
services:
  ebay-server:
    container_name: ebay-api_server
    build:
      context: .
      dockerfile: Dockerfile-store
    ports:
      - "8300:9991"
    environment:
      - STORE_NAME=ebay
    networks:
      - store_exercise_1

  amazon-server:
    container_name: amazon-api_server
    build:
      context: .
      dockerfile: Dockerfile-store
    ports:
      - "8301:9991"
    environment:
      - STORE_NAME=amazon
    networks:
      - store_exercise_1

  mysql_db:
    container_name: mysql_db
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: abcdef123
      MYSQL_DATABASE: app_db
      MYSQL_USER: dev
      MYSQL_PASSWORD: abcdef123
    volumes:
      - mysql_db_storage:/var/lib/mysql
    ports:
      - "33063:3306"
    networks:
      - store_exercise_1

  stores-server:
    container_name: stores
    build:
      context: .
      dockerfile: Dockerfile-solution
    restart: always
    ports:
      - "8302:9991"
    environment:
      - EBAY_API_URL=ebay-api_server:9991
      - AMAZON_API_URL=amazon-api_server:9991
    volumes:
      - ./solution/:/app/solution
    depends_on:
      - mysql_db
    networks:
      - store_exercise_1

  test:
    container_name: stores_test
    build:
      context: .
      dockerfile: Dockerfile-solution
    command: [ "pytest", "-v" ]
    environment:
      - PYTHONPATH=/app
    depends_on:
      - mysql_db
      - stores-server
    networks:
      - store_exercise_1

networks:
  store_exercise_1:
    driver: bridge

volumes:
  mysql_db_storage:
    driver: local
